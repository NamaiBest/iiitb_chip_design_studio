// instr_mem.v - Synthesizable instruction memory

module instr_mem #(parameter DATA_WIDTH = 32, ADDR_WIDTH = 32, MEM_SIZE = 512) (
    input                       clk,
    input                       reset,
    input       [ADDR_WIDTH-1:0] instr_addr,
    output reg  [DATA_WIDTH-1:0] instr
);

// Memory array
reg [DATA_WIDTH-1:0] instr_ram [0:MEM_SIZE-1];

// Reset and initialization process
always @(posedge clk) begin
    if (reset) begin
        // Memory reset logic - if needed, initialize to zeros or a default value
        integer i;
        for (i = 0; i < MEM_SIZE; i = i + 1) begin
            instr_ram[i] <= 0;
        end
    end
end

// Synchronous read logic
always @(posedge clk) begin
    if (!reset) begin
        instr <= instr_ram[instr_addr[31:2]];
    end else begin
        instr <= 0;
    end
end

endmodule
