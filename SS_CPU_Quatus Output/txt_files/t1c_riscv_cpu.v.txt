// t1c_riscv_cpu.v - Synthesizable Top Module to test riscv_cpu

module t1c_riscv_cpu (
    input         clk, reset,
    input         Ext_MemWrite,
    input  [31:0] Ext_WriteData, Ext_DataAdr,
    output        MemWrite,
    output [31:0] WriteData, DataAdr, ReadData,
    output [31:0] PC, Result
);

// Internal signals
wire [31:0] Instr;
wire [31:0] DataAdr_rv32, WriteData_rv32;
wire        MemWrite_rv32;

// Instantiate processor and memories
riscv_cpu rvcpu (
    .clk(clk), 
    .reset(reset), 
    .PC(PC), 
    .Instr(Instr),
    .MemWrite(MemWrite_rv32), 
    .Mem_WrAddr(DataAdr_rv32),
    .Mem_WrData(WriteData_rv32), 
    .ReadData(ReadData), 
    .Result(Result)
);

instr_mem instrmem (
    .clk(clk),
    .reset(reset),
    .instr_addr(PC),
    .instr(Instr)
);

data_mem datamem (
    .clk(clk), 
    .reset(reset),
    .wr_en(MemWrite),
    .funct3(Instr[14:12]),
    .wr_addr(DataAdr), 
    .wr_data(WriteData), 
    .rd_data_mem(ReadData)
);

// External memory manipulation logic
assign MemWrite  = (Ext_MemWrite && reset) ? 1 : MemWrite_rv32;
assign WriteData = (Ext_MemWrite && reset) ? Ext_WriteData : WriteData_rv32;
assign DataAdr   = reset ? Ext_DataAdr : DataAdr_rv32;

endmodule
